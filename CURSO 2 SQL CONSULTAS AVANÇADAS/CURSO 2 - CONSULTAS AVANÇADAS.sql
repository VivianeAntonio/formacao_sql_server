------------------ CURSO 2 - CONSULTAS AVANÇADAS
SELECT COUNT(*) FROM TABELA_DE_CLIENTES
SELECT COUNT(*) FROM TABELA_DE_PRODUTOS
SELECT COUNT(*) FROM TABELA_DE_VENDEDORES
SELECT COUNT(*) FROM NOTAS_FISCAIS
SELECT COUNT(*) FROM ITENS_NOTAS_FISCAIS

SELECT * FROM TABELA_DE_CLIENTES
SELECT CPF,NOME,BAIRRO,CIDADE FROM TABELA_DE_CLIENTES

SELECT CPF AS IDENTIFICADOR,NOME AS [NOME DE CLIENTE],BAIRRO,CIDADE FROM TABELA_DE_CLIENTES
SELECT CPF AS IDENTIFICADOR,NOME AS [NOME DE CLIENTE],BAIRRO,CIDADE FROM TABELA_DE_CLIENTES AS TDC

SELECT TDC.CPF AS IDENTIFICADOR,TDC.NOME AS [NOME DE CLIENTE],BAIRRO,CIDADE FROM TABELA_DE_CLIENTES AS TDC
SELECT TDC.* FROM TABELA_DE_CLIENTES AS TDC

SELECT * FROM TABELA_DE_PRODUTOS WHERE CODIGO_DO_PRODUTO = '290478'
SELECT * FROM TABELA_DE_PRODUTOS WHERE SABOR = 'LARANJA'

SELECT * FROM TABELA_DE_CLIENTES WHERE IDADE <> 18;
SELECT * FROM TABELA_DE_CLIENTES WHERE BAIRRO >= 'LAPA';

SELECT * FROM TABELA_DE_PRODUTOS WHERE SABOR = 'MANGA' AND TAMANHO = '470 ML'
SELECT * FROM TABELA_DE_PRODUTOS WHERE SABOR = 'MANGA' OR TAMANHO = '470 ML'

SELECT * FROM TABELA_DE_PRODUTOS WHERE NOT (SABOR = 'MANGA' AND TAMANHO = '470 ML')
SELECT * FROM TABELA_DE_PRODUTOS WHERE NOT (SABOR = 'MANGA' OR TAMANHO = '470 ML')

SELECT * FROM TABELA_DE_PRODUTOS WHERE NOT (SABOR = 'MANGA' AND TAMANHO = '470 ML')
SELECT * FROM TABELA_DE_PRODUTOS WHERE NOT SABOR = 'MANGA' AND TAMANHO = '470 ML'

SELECT * FROM TABELA_DE_CLIENTES WHERE NOME LIKE '%SILVA'

SELECT DISTINCT EMBALAGEM FROM TABELA_DE_PRODUTOS WHERE SABOR = 'MACA'

SELECT DISTINCT SABOR FROM TABELA_DE_PRODUTOS 

SELECT TOP 5 * FROM TABELA_DE_PRODUTOS WHERE SABOR = 'MACA'
SELECT TOP 10 * FROM NOTAS_FISCAIS WHERE DATA_VENDA = '2017-10-01';

SELECT * FROM TABELA_DE_PRODUTOS ORDER BY NOME_DO_PRODUTO 

SELECT * FROM TABELA_DE_PRODUTOS ORDER BY EMBALAGEM DESC, NOME_DO_PRODUTO 

SELECT TOP 5* FROM TABELA_DE_PRODUTOS ORDER BY PRECO_DE_LISTA DESC 
SELECT TOP 5 * FROM NOTAS_FISCAIS
SELECT TOP 5 * FROM ITENS_NOTAS_FISCAIS


SELECT * FROM TABELA_DE_PRODUTOS WHERE NOME_DO_PRODUTO = 'Linha Refrescante - 1 Litro - Morango/Limao'
SELECT TOP 1 * FROM ITENS_NOTAS_FISCAIS WHERE CODIGO_DO_PRODUTO = '1101035' ORDER BY QUANTIDADE DESC

SELECT CIDADE, IDADE FROM TABELA_DE_CLIENTES
SELECT CIDADE, IDADE FROM TABELA_DE_CLIENTES ORDER BY CIDADE, IDADE
SELECT CIDADE, SUM(IDADE) AS IDADE FROM TABELA_DE_CLIENTES GROUP BY CIDADE
SELECT CIDADE, AVG(IDADE) AS IDADE FROM TABELA_DE_CLIENTES GROUP BY CIDADE
SELECT CIDADE, SUM(IDADE) AS IDADE,  SUM(LIMITE_DE_CREDITO) AS CREDITO FROM TABELA_DE_CLIENTES GROUP BY CIDADE
SELECT CIDADE, AVG(IDADE) AS IDADE ,  SUM(LIMITE_DE_CREDITO) AS CREDITO FROM TABELA_DE_CLIENTES GROUP BY CIDADE
SELECT CIDADE, COUNT(*) AS NUMERO_DE_CLIENTE FROM TABELA_DE_CLIENTES GROUP BY CIDADE
SELECT EMBALAGEM , COUNT(*) AS NUMERO_DE_CLIENTE FROM TABELA_DE_PRODUTOS
WHERE SABOR = 'LARANJA' GROUP BY EMBALAGEM

SELECT COUNT(*) AS QTD_DE_VENDAS FROM ITENS_NOTAS_FISCAIS WHERE CODIGO_DO_PRODUTO = '1101035' 
AND QUANTIDADE = 99 GROUP BY QUANTIDADE 

SELECT COUNT(*) FROM ITENS_NOTAS_FISCAIS WHERE CODIGO_DO_PRODUTO = '1101035' AND QUANTIDADE = 99;

SELECT * FROM TABELA_DE_CLIENTES 

SELECT 
ESTADO,
SUM(LIMITE_DE_CREDITO) AS CREDITO
FROM TABELA_DE_CLIENTES 
GROUP BY ESTADO;

SELECT 
ESTADO,
SUM(LIMITE_DE_CREDITO) AS CREDITO
FROM TABELA_DE_CLIENTES 
GROUP BY ESTADO
HAVING
SUM(LIMITE_DE_CREDITO) > 900000;

SELECT EMBALAGEM, MAX(PRECO_DE_LISTA) AS PRECO_MAX, MIN(PRECO_DE_LISTA) AS PRECO_MIN
FROM TABELA_DE_PRODUTOS
GROUP BY EMBALAGEM

SELECT EMBALAGEM, MAX(PRECO_DE_LISTA) AS PRECO_MAX, MIN(PRECO_DE_LISTA) AS PRECO_MIN
FROM TABELA_DE_PRODUTOS
WHERE PRECO_DE_LISTA >= 10
GROUP BY EMBALAGEM

SELECT EMBALAGEM, MAX(PRECO_DE_LISTA) AS PRECO_MAX, MIN(PRECO_DE_LISTA) AS PRECO_MIN
FROM TABELA_DE_PRODUTOS
WHERE PRECO_DE_LISTA >= 10
GROUP BY EMBALAGEM
HAVING MAX(PRECO_DE_LISTA) >= 20

SELECT 
CODIGO_DO_PRODUTO, SUM(QUANTIDADE) AS QTD_TOTAL
FROM ITENS_NOTAS_FISCAIS 
GROUP BY CODIGO_DO_PRODUTO
ORDER BY
SUM(QUANTIDADE) DESC

SELECT 
CODIGO_DO_PRODUTO, SUM(QUANTIDADE) AS QTD_TOTAL
FROM ITENS_NOTAS_FISCAIS 
GROUP BY CODIGO_DO_PRODUTO
HAVING SUM(QUANTIDADE) > 394000 
ORDER BY SUM(QUANTIDADE) DESC

SELECT NOME_DO_PRODUTO, PRECO_DE_LISTA FROM TABELA_DE_PRODUTOS WHERE SABOR = 'MANGA'

SELECT NOME_DO_PRODUTO, 
PRECO_DE_LISTA,
(CASE
	WHEN PRECO_DE_LISTA >= 12 THEN 'PRODUTO CARO'
	WHEN PRECO_DE_LISTA >= 7 AND PRECO_DE_LISTA < 12 THEN 'PRODUTO EM CONTA'
	ELSE 'PRODUTO BARATO' END
) AS CLASSIFICACAO
FROM TABELA_DE_PRODUTOS WHERE SABOR = 'MANGA'
ORDER BY PRECO_DE_LISTA

SELECT NOME_DO_PRODUTO, 
PRECO_DE_LISTA,
(CASE
	WHEN PRECO_DE_LISTA >= 12 THEN 'PRODUTO CARO'
	WHEN PRECO_DE_LISTA >= 7 AND PRECO_DE_LISTA < 12 THEN 'PRODUTO EM CONTA'
	ELSE 'PRODUTO BARATO' END
) AS CLASSIFICACAO
FROM TABELA_DE_PRODUTOS 
ORDER BY PRECO_DE_LISTA

SELECT 
(CASE
	WHEN PRECO_DE_LISTA >= 12 THEN 'PRODUTO CARO'
	WHEN PRECO_DE_LISTA >= 7 AND PRECO_DE_LISTA < 12 THEN 'PRODUTO EM CONTA'
	ELSE 'PRODUTO BARATO' END
) AS CLASSIFICACAO,
COUNT(*) AS NUMERO_PRODUTOS
FROM TABELA_DE_PRODUTOS 
GROUP BY (CASE
	WHEN PRECO_DE_LISTA >= 12 THEN 'PRODUTO CARO'
	WHEN PRECO_DE_LISTA >= 7 AND PRECO_DE_LISTA < 12 THEN 'PRODUTO EM CONTA'
	ELSE 'PRODUTO BARATO' END)


SELECT NOME,
LIMITE_DE_CREDITO,
CASE 
	WHEN LIMITE_DE_CREDITO >= 150000 THEN 'Clientes grandes'
	WHEN LIMITE_DE_CREDITO BETWEEN  110000 AND 150000 THEN 'Clientes médios'
	ELSE 'Clientes pequenos'
END AS CLASSIFICACAO_LIMITE_CREDITO
FROM TABELA_DE_CLIENTES


SELECT MATRICULA, COUNT(*) AS NUMERO_NOTAS FROM NOTAS_FISCAIS GROUP BY MATRICULA;

SELECT NF.MATRICULA, V.NOME, COUNT(*) AS NUMERO_NOTAS 
FROM NOTAS_FISCAIS NF
INNER JOIN TABELA_DE_VENDEDORES V
ON V.MATRICULA = NF.MATRICULA
GROUP BY NF.MATRICULA, NOME;

SELECT NF.MATRICULA, V.NOME, COUNT(*) AS NUMERO_NOTAS 
FROM  TABELA_DE_VENDEDORES V 
INNER JOIN NOTAS_FISCAIS NF
ON V.MATRICULA = NF.MATRICULA
GROUP BY NF.MATRICULA, NOME;

SELECT ITENS_NOTAS_FISCAIS.CODIGO_DO_PRODUTO, TABELA_DE_PRODUTOS.NOME_DO_PRODUTO, SUM(QUANTIDADE) AS QUANTIDADE 
FROM ITENS_NOTAS_FISCAIS 
INNER JOIN TABELA_DE_PRODUTOS 
ON TABELA_DE_PRODUTOS.CODIGO_DO_PRODUTO = ITENS_NOTAS_FISCAIS.CODIGO_DO_PRODUTO
GROUP BY ITENS_NOTAS_FISCAIS.CODIGO_DO_PRODUTO, TABELA_DE_PRODUTOS.NOME_DO_PRODUTO
HAVING SUM(QUANTIDADE) > 394000 
ORDER BY SUM(QUANTIDADE) DESC;

SELECT DISTINCT
TC.CPF AS CPF_DO_CLIENTE,
TC.NOME AS NOME_DO_CLIENTE,
NF.CPF AS CPF_DA_NOTA
FROM TABELA_DE_CLIENTES TC
INNER JOIN NOTAS_FISCAIS NF
ON TC.CPF = NF.CPF

SELECT COUNT(*) FROM TABELA_DE_CLIENTES
SELECT * FROM TABELA_DE_CLIENTES

--INSERT INTO TABELA_DE_CLIENTES
--(CPF,NOME,ENDERECO_1,ENDERECO_2,BAIRRO,CIDADE ,ESTADO,CEP,DATA_DE_NASCIMENTO,IDADE,GENERO,
--LIMITE_DE_CREDITO,VOLUME_DE_COMPRA,PRIMEIRA_COMPRA)
--VALUES('23412632331','Juliana Silva','Rua Tramandai','', 'Bangu', 'Rio de Janeiro', 'RJ',
--'23400000', '1989-02-04',33,'F',180000,24500,0); 

SELECT DISTINCT
TC.CPF AS CPF_DO_CLIENTE,
TC.NOME AS NOME_DO_CLIENTE,
NF.CPF AS CPF_DA_NOTA
FROM TABELA_DE_CLIENTES TC
LEFT JOIN NOTAS_FISCAIS NF
ON TC.CPF = NF.CPF

SELECT DISTINCT
TC.CPF AS CPF_DO_CLIENTE,
TC.NOME AS NOME_DO_CLIENTE
FROM TABELA_DE_CLIENTES TC
LEFT JOIN NOTAS_FISCAIS NF
ON TC.CPF = NF.CPF
WHERE NF.CPF IS NULL

SELECT
TV.NOME AS NOME_DO_VENDEDOR,
TV.BAIRRO AS BAIRRO_DO_VENDEDOR,
TC.BAIRRO AS BAIRRO_DO_CLIENTE,
TC.NOME AS NOME_DO_CLIENTE
FROM TABELA_DE_CLIENTES TC
INNER JOIN TABELA_DE_VENDEDORES TV
ON TV.BAIRRO = TC.BAIRRO

SELECT
TV.NOME AS NOME_DO_VENDEDOR,
TV.BAIRRO AS BAIRRO_DO_VENDEDOR,
TC.BAIRRO AS BAIRRO_DO_CLIENTE,
TC.NOME AS NOME_DO_CLIENTE
FROM TABELA_DE_CLIENTES TC
RIGHT JOIN TABELA_DE_VENDEDORES TV
ON TV.BAIRRO = TC.BAIRRO
WHERE TC.NOME IS NULL

SELECT
TV.NOME AS NOME_DO_VENDEDOR,
TV.BAIRRO AS BAIRRO_DO_VENDEDOR,
TC.BAIRRO AS BAIRRO_DO_CLIENTE,
TC.NOME AS NOME_DO_CLIENTE
FROM TABELA_DE_CLIENTES TC
LEFT JOIN TABELA_DE_VENDEDORES TV
ON TV.BAIRRO = TC.BAIRRO
WHERE TV.NOME IS NULL

SELECT
TV.NOME AS NOME_DO_VENDEDOR,
TV.BAIRRO AS BAIRRO_DO_VENDEDOR,
TC.BAIRRO AS BAIRRO_DO_CLIENTE,
TC.NOME AS NOME_DO_CLIENTE
FROM TABELA_DE_CLIENTES TC
FULL JOIN TABELA_DE_VENDEDORES TV
ON TV.BAIRRO = TC.BAIRRO

SELECT DISTINCT BAIRRO FROM TABELA_DE_CLIENTES
UNION 
SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES

SELECT DISTINCT BAIRRO FROM TABELA_DE_CLIENTES
UNION ALL
SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES

SELECT DISTINCT BAIRRO, 'CLIENTE' AS ORIGEM FROM TABELA_DE_CLIENTES
UNION ALL
SELECT DISTINCT BAIRRO, 'FORNECEDOR' AS ORIGEM  FROM TABELA_DE_VENDEDORES

SELECT * FROM TABELA_DE_CLIENTES
WHERE BAIRRO IN (SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES);

SELECT PRODUTO.NOME_DO_PRODUTO FROM
(SELECT INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO, SUM(INF.QUANTIDADE) AS QUANTIDADE FROM ITENS_NOTAS_FISCAIS  INF
INNER JOIN TABELA_DE_PRODUTOS TP 
ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO HAVING SUM(INF.QUANTIDADE) > 394000 
) AS PRODUTO

SELECT DISTINCT PRODUTO.SABOR FROM
(SELECT TP.SABOR FROM ITENS_NOTAS_FISCAIS  INF
INNER JOIN TABELA_DE_PRODUTOS TP 
ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO, SABOR HAVING SUM(INF.QUANTIDADE) > 394000 
) AS PRODUTO

SELECT DISTINCT SABOR FROM TABELA_DE_PRODUTOS WHERE
CODIGO_DO_PRODUTO IN (
SELECT INF.CODIGO_DO_PRODUTO FROM ITENS_NOTAS_FISCAIS  INF
INNER JOIN TABELA_DE_PRODUTOS TP 
ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO HAVING SUM(INF.QUANTIDADE) > 394000 );

SELECT EMBALAGEM, AVG(PRECO_DE_LISTA) AS PRECO_MEDIO FROM TABELA_DE_PRODUTOS GROUP BY EMBALAGEM;

SELECT EMBALAGEM, AVG(PRECO_DE_LISTA) AS PRECO_MEDIO 
FROM TABELA_DE_PRODUTOS 
GROUP BY EMBALAGEM
HAVING AVG(PRECO_DE_LISTA) <= 10;

SELECT MEDIA_EMBALAGENS.EMBALAGEM,
MEDIA_EMBALAGENS.PRECO_MEDIO
FROM
(SELECT EMBALAGEM, AVG(PRECO_DE_LISTA) AS PRECO_MEDIO FROM TABELA_DE_PRODUTOS GROUP BY EMBALAGEM) 
	AS MEDIA_EMBALAGENS
WHERE MEDIA_EMBALAGENS.PRECO_MEDIO <= 10;

SELECT INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO, SUM(INF.QUANTIDADE) AS QUANTIDADE FROM ITENS_NOTAS_FISCAIS  INF
INNER JOIN TABELA_DE_PRODUTOS TP 
ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO HAVING SUM(INF.QUANTIDADE) > 394000 
ORDER BY SUM(INF.QUANTIDADE) DESC;

SELECT QTD_PRODUTOS.CODIGO_DO_PRODUTO, QTD_PRODUTOS.NOME_DO_PRODUTO, QTD_PRODUTOS.QUANTIDADE FROM
(SELECT INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO, SUM(INF.QUANTIDADE) AS QUANTIDADE FROM ITENS_NOTAS_FISCAIS  INF
INNER JOIN TABELA_DE_PRODUTOS TP 
ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO) AS QTD_PRODUTOS
WHERE
QTD_PRODUTOS.QUANTIDADE  > 394000;

SELECT SC.CODIGO_DO_PRODUTO, SC.NOME_DO_PRODUTO, SC.QUANTIDADE_TOTAL
FROM
(SELECT INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO, SUM(INF.QUANTIDADE) AS QUANTIDADE_TOTAL FROM ITENS_NOTAS_FISCAIS  INF
INNER JOIN TABELA_DE_PRODUTOS TP 
ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO) SC
WHERE SC.QUANTIDADE_TOTAL > 394000 
ORDER BY SC.QUANTIDADE_TOTAL DESC;

SELECT MEDIA_EMBALAGENS.EMBALAGEM,
MEDIA_EMBALAGENS.PRECO_MEDIO
FROM
(SELECT EMBALAGEM, AVG(PRECO_DE_LISTA) AS PRECO_MEDIO FROM TABELA_DE_PRODUTOS GROUP BY EMBALAGEM) 
	AS MEDIA_EMBALAGENS
WHERE MEDIA_EMBALAGENS.PRECO_MEDIO <= 10;

--CREATE VIEW MEDIA_EMBALAGENS AS
--SELECT EMBALAGEM, AVG(PRECO_DE_LISTA) AS PRECO_MEDIO FROM TABELA_DE_PRODUTOS GROUP BY EMBALAGEM

SELECT * FROM MEDIA_EMBALAGENS

SELECT EMBALAGEM, PRECO_MEDIO
FROM MEDIA_EMBALAGENS
WHERE PRECO_MEDIO <= 10

SELECT INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO, SUM(INF.QUANTIDADE) AS QUANTIDADE FROM ITENS_NOTAS_FISCAIS  INF
INNER JOIN TABELA_DE_PRODUTOS TP 
ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO HAVING SUM(INF.QUANTIDADE) > 394000 
ORDER BY SUM(INF.QUANTIDADE) DESC;

--CREATE VIEW QUANTIDADES_TOTAIS AS
--SELECT INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO, SUM(INF.QUANTIDADE) AS QUANTIDADE FROM ITENS_NOTAS_FISCAIS  INF
--INNER JOIN TABELA_DE_PRODUTOS TP 
--ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
--GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO HAVING SUM(INF.QUANTIDADE) > 394000 

SELECT * FROM QUANTIDADES_TOTAIS ORDER BY QUANTIDADE DESC

SELECT * FROM TABELA_DE_CLIENTES

SELECT NOME, LOWER(NOME) AS NOME_MINUSCULO FROM TABELA_DE_CLIENTES
SELECT NOME, UPPER(NOME) AS NOME_MAIUSCULO FROM TABELA_DE_CLIENTES
SELECT NOME, CONCAT(ENDERECO_1, ' ', BAIRRO, ' ', CIDADE, ' ',
ESTADO, ' - ',CEP) FROM TABELA_DE_CLIENTES;

SELECT NOME, ENDERECO_1 + ' ' + BAIRRO + ' ' + CIDADE + ' ' +
ESTADO + ' - ' + CEP FROM TABELA_DE_CLIENTES;

SELECT NOME_DO_PRODUTO, LEFT(NOME_DO_PRODUTO,3) AS TRES_PRIMEIROS_CARAC FROM TABELA_DE_PRODUTOS

SELECT TAMANHO, REPLACE((REPLACE(TAMANHO, 'Litros', 'L')),'Litro', 'L') TAMANHO_MODIFICADO FROM TABELA_DE_PRODUTOS

SELECT NOME, SUBSTRING(NOME, 1, CHARINDEX(' ', NOME, 1) - 1) FROM TABELA_DE_CLIENTES
SELECT NOME, SUBSTRING(NOME, 1, CHARINDEX(' ', NOME, 1)) FROM TABELA_DE_CLIENTES;
SELECT NOME, CHARINDEX(' ', NOME, 1) FROM TABELA_DE_CLIENTES;

SELECT 
GETDATE() DATA_HOJE,
DATEADD(DAY,10,GETDATE()) DATA_DAQUI_10_DIAS,
DATEADD(DAY,-48,GETDATE()) DATA_48_DIAS_ATRAS,
DATEDIFF(DAY,'2024-01-01',GETDATE()) DIAS_DESDE_INICIO_ANO

SELECT DATEPART(DAY,GETDATE()) DIA_HOJE

SELECT ISDATE(DATETIMEFROMPARTS(2022,02,28,00,00,00,00))
SELECT ISDATE('2022-02-29 00:00:00:00')

SELECT 
'O cliente ' + NOME + ' nasceu no dia ' + DATENAME(DAY,DATA_DE_NASCIMENTO)
+ ' de ' + DATENAME(MONTH,DATA_DE_NASCIMENTO) + ' de ' + DATENAME(YEAR,DATA_DE_NASCIMENTO) + '.'
FROM TABELA_DE_CLIENTES

SELECT NOME + ' nasceu em ' + 
DATENAME (WEEKDAY,DATA_DE_NASCIMENTO) + ',' +
DATENAME (DAY,DATA_DE_NASCIMENTO) + ' de ' +
DATENAME(MONTH, DATA_DE_NASCIMENTO) + ' de ' +
DATENAME(YEAR, DATA_DE_NASCIMENTO) AS DATA_EXTENSO
FROM TABELA_DE_CLIENTES;

SELECT PI()

SELECT ROUND(3.437,2), ROUND(3.433,2),ROUND(3.435,2), CEILING(3.433),
FLOOR(3.433), POWER(12,2), EXP(3), SQRT(300), ABS(10), ABS(-10)

SELECT * FROM NOTAS_FISCAIS
SELECT * FROM ITENS_NOTAS_FISCAIS

SELECT  
FLOOR((INF.QUANTIDADE * INF.PRECO) / NF.IMPOSTO)
FROM NOTAS_FISCAIS NF
JOIN ITENS_NOTAS_FISCAIS INF ON INF.NUMERO = NF.NUMERO
WHERE 
DATEPART(YEAR, NF.DATA_VENDA) = '2016'

---- RESULTADO PROFESSOR
SELECT YEAR(DATA_VENDA) AS ANO, FLOOR(SUM(IMPOSTO * (QUANTIDADE * PRECO))) 
FROM NOTAS_FISCAIS NF
INNER JOIN ITENS_NOTAS_FISCAIS INF ON NF.NUMERO = INF.NUMERO
WHERE YEAR(DATA_VENDA) = 2016
GROUP BY YEAR(DATA_VENDA);

-- QUEBRANDO A CONTA
SELECT QUANTIDADE, PRECO, QUANTIDADE * PRECO QTD_PRECO
FROM NOTAS_FISCAIS NF
INNER JOIN ITENS_NOTAS_FISCAIS INF ON NF.NUMERO = INF.NUMERO
WHERE YEAR(DATA_VENDA) = 2016

SELECT DATA_VENDA, QUANTIDADE, PRECO, IMPOSTO, QUANTIDADE * PRECO AS QTD_PRECO,
(QUANTIDADE * PRECO) * IMPOSTO AS QTD_PRECO_IMPOSTO
FROM NOTAS_FISCAIS NF
INNER JOIN ITENS_NOTAS_FISCAIS INF ON NF.NUMERO = INF.NUMERO
WHERE YEAR(DATA_VENDA) = 2016

SELECT 
SUM((QUANTIDADE * PRECO) * IMPOSTO) AS QTD_PRECO_IMPOSTO_SOMA
FROM NOTAS_FISCAIS NF
INNER JOIN ITENS_NOTAS_FISCAIS INF ON NF.NUMERO = INF.NUMERO
WHERE YEAR(DATA_VENDA) = 2016
GROUP BY YEAR(DATA_VENDA);

--- RESULTADO FINAL
SELECT 
YEAR(DATA_VENDA),
FLOOR(SUM((QUANTIDADE * PRECO) * IMPOSTO)) AS QTD_PRECO_IMPOSTO_SOMA_ARREDONDA_MENOR_INTEIRO
FROM NOTAS_FISCAIS NF
INNER JOIN ITENS_NOTAS_FISCAIS INF ON NF.NUMERO = INF.NUMERO
WHERE YEAR(DATA_VENDA) = 2016
GROUP BY YEAR(DATA_VENDA);
-----------------------------

SELECT CONVERT(VARCHAR(10), GETDATE(),121)
SELECT CONVERT(VARCHAR(25), GETDATE(),121)

SELECT DATA_DE_NASCIMENTO, CONVERT(VARCHAR(25), DATA_DE_NASCIMENTO,121) DATA_CONVERTIDA
FROM TABELA_DE_CLIENTES

SELECT DATA_DE_NASCIMENTO, CONVERT(VARCHAR(25), DATA_DE_NASCIMENTO,106) DATA_CONVERTIDA
FROM TABELA_DE_CLIENTES

SELECT 
CONCAT('O PREÇO É ', PRECO_DE_LISTA) AS PRECO
FROM TABELA_DE_PRODUTOS

SELECT 
CONCAT('O PREÇO É ', CAST(PRECO_DE_LISTA AS varchar(10))) AS PRECO
FROM TABELA_DE_PRODUTOS

SELECT TOP 1 * FROM TABELA_DE_CLIENTES
SELECT TOP 1 * FROM NOTAS_FISCAIS
SELECT TOP 1 * FROM ITENS_NOTAS_FISCAIS

SELECT 
CONCAT('O cliente ', tc.NOME, ' comprou R$ ', STR(INF.PRECO * INF.QUANTIDADE, 10, 2), 
' no ano de 2016')
FROM TABELA_DE_CLIENTES TC
INNER JOIN NOTAS_FISCAIS NF ON NF.CPF = TC.CPF
INNER JOIN ITENS_NOTAS_FISCAIS INF ON INF.NUMERO = NF.NUMERO
WHERE YEAR(NF.DATA_VENDA) = 2016

SELECT TC.NOME, CONCAT('O cliente ', TC.NOME, ' comprou R$ ',
STR(SUM(IT.QUANTIDADE * IT.PRECO) ,10,2), ' no ano de ', YEAR(NF.DATA_VENDA), '.') AS VALOR
FROM NOTAS_FISCAIS AS NF
INNER JOIN ITENS_NOTAS_FISCAIS AS IT ON NF.NUMERO = IT.NUMERO
INNER JOIN TABELA_DE_CLIENTES AS TC ON NF.CPF = TC.CPF
WHERE YEAR(NF.DATA_VENDA) = '2016'
GROUP BY TC.NOME, YEAR(NF.DATA_VENDA)

SELECT
NF.CPF,
NF.DATA_VENDA,
INF.QUANTIDADE
FROM NOTAS_FISCAIS NF
INNER JOIN ITENS_NOTAS_FISCAIS INF 
ON INF.NUMERO = NF.NUMERO

SELECT
NF.CPF,
CONVERT(VARCHAR(7), NF.DATA_VENDA,120) AS MES_ANO,
SUM(INF.QUANTIDADE) AS QUANTIDADE_TOTAL
FROM NOTAS_FISCAIS NF
INNER JOIN ITENS_NOTAS_FISCAIS INF 
ON INF.NUMERO = NF.NUMERO
GROUP BY 
NF.CPF,
CONVERT(VARCHAR(7), NF.DATA_VENDA,120)

SELECT CPF, NOME, VOLUME_DE_COMPRA FROM TABELA_DE_CLIENTES

SELECT
TC.CPF,
TC.NOME,
TC.VOLUME_DE_COMPRA,
TV.MES_ANO,
TV.QUANTIDADE_TOTAL
FROM TABELA_DE_CLIENTES TC
INNER JOIN
(
	SELECT
	NF.CPF,
	CONVERT(VARCHAR(7), NF.DATA_VENDA,120) AS MES_ANO,
	SUM(INF.QUANTIDADE) AS QUANTIDADE_TOTAL
	FROM NOTAS_FISCAIS NF
	INNER JOIN ITENS_NOTAS_FISCAIS INF 
	ON INF.NUMERO = NF.NUMERO
	GROUP BY 
	NF.CPF,
	CONVERT(VARCHAR(7), NF.DATA_VENDA,120)
) AS TV
ON TV.CPF = TC.CPF


SELECT
TC.CPF,
TC.NOME,
TC.VOLUME_DE_COMPRA,
TV.MES_ANO,
TV.QUANTIDADE_TOTAL,
(CASE WHEN TC.VOLUME_DE_COMPRA >= TV.QUANTIDADE_TOTAL THEN 'VENDAS VÁLIDAS'
	ELSE 'VENDAS INVÁLIDAS' END) AS RESULTADO
FROM TABELA_DE_CLIENTES TC
INNER JOIN
(
	SELECT
	NF.CPF,
	CONVERT(VARCHAR(7), NF.DATA_VENDA,120) AS MES_ANO,
	SUM(INF.QUANTIDADE) AS QUANTIDADE_TOTAL
	FROM NOTAS_FISCAIS NF
	INNER JOIN ITENS_NOTAS_FISCAIS INF 
	ON INF.NUMERO = NF.NUMERO
	GROUP BY 
	NF.CPF,
	CONVERT(VARCHAR(7), NF.DATA_VENDA,120)
) AS TV
ON TV.CPF = TC.CPF
WHERE TV.MES_ANO = '2015-01'


SELECT
TC.CPF,
TC.NOME,
TC.VOLUME_DE_COMPRA,
TV.MES_ANO,
TV.QUANTIDADE_TOTAL,
(CASE WHEN TC.VOLUME_DE_COMPRA >= TV.QUANTIDADE_TOTAL THEN 'VENDAS VÁLIDAS'
	ELSE 'VENDAS INVÁLIDAS' END) AS RESULTADO,
ROUND((1 - (VOLUME_DE_COMPRA/QUANTIDADE_TOTAL)) * 100, 2) AS PERCENTUAL_VENDAS
FROM TABELA_DE_CLIENTES TC
INNER JOIN
(
	SELECT
	NF.CPF,
	CONVERT(VARCHAR(7), NF.DATA_VENDA,120) AS MES_ANO,
	SUM(INF.QUANTIDADE) AS QUANTIDADE_TOTAL
	FROM NOTAS_FISCAIS NF
	INNER JOIN ITENS_NOTAS_FISCAIS INF 
	ON INF.NUMERO = NF.NUMERO
	GROUP BY 
	NF.CPF,
	CONVERT(VARCHAR(7), NF.DATA_VENDA,120)
) AS TV
ON TV.CPF = TC.CPF
WHERE 
TV.MES_ANO = '2015-01'
AND (TC.VOLUME_DE_COMPRA - TV.QUANTIDADE_TOTAL) < 0


SELECT
TP.SABOR,
NF.DATA_VENDA,
INF.QUANTIDADE
FROM TABELA_DE_PRODUTOS TP
INNER JOIN ITENS_NOTAS_FISCAIS INF
ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
INNER JOIN NOTAS_FISCAIS NF
ON NF.NUMERO = INF.NUMERO


SELECT
TP.SABOR,
YEAR(NF.DATA_VENDA) AS ANO,
SUM(INF.QUANTIDADE) AS VENDA_ANO
FROM TABELA_DE_PRODUTOS TP
INNER JOIN ITENS_NOTAS_FISCAIS INF
ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
INNER JOIN NOTAS_FISCAIS NF
ON NF.NUMERO = INF.NUMERO
WHERE YEAR(NF.DATA_VENDA) = 2015
GROUP BY TP.SABOR, YEAR(NF.DATA_VENDA)
ORDER BY SUM(INF.QUANTIDADE) DESC

SELECT 
YEAR(NF.DATA_VENDA) AS ANO,
SUM(INF.QUANTIDADE) AS VENDA_TOTAL_ANO
FROM NOTAS_FISCAIS NF
INNER JOIN ITENS_NOTAS_FISCAIS INF
ON INF.NUMERO = NF.NUMERO
WHERE YEAR(NF.DATA_VENDA) = 2015
GROUP BY YEAR(NF.DATA_VENDA)


SELECT
VENDA_SABOR.SABOR,
VENDA_SABOR.ANO,
VENDA_SABOR.VENDA_ANO,
VENDA_NO_ANO.VENDA_TOTAL_ANO
FROM
(
	SELECT
	TP.SABOR,
	YEAR(NF.DATA_VENDA) AS ANO,
	SUM(INF.QUANTIDADE) AS VENDA_ANO
	FROM TABELA_DE_PRODUTOS TP
	INNER JOIN ITENS_NOTAS_FISCAIS INF
	ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
	INNER JOIN NOTAS_FISCAIS NF
	ON NF.NUMERO = INF.NUMERO
	WHERE YEAR(NF.DATA_VENDA) = 2015
	GROUP BY TP.SABOR, YEAR(NF.DATA_VENDA)	
) AS VENDA_SABOR
INNER JOIN
(
	SELECT 
	YEAR(NF.DATA_VENDA) AS ANO,
	SUM(INF.QUANTIDADE) AS VENDA_TOTAL_ANO
	FROM NOTAS_FISCAIS NF
	INNER JOIN ITENS_NOTAS_FISCAIS INF
	ON INF.NUMERO = NF.NUMERO
	WHERE YEAR(NF.DATA_VENDA) = 2015
	GROUP BY YEAR(NF.DATA_VENDA)
) AS VENDA_NO_ANO
ON VENDA_SABOR.ANO = VENDA_NO_ANO.ANO
ORDER BY VENDA_SABOR.VENDA_ANO DESC


SELECT
VENDA_SABOR.SABOR,
VENDA_SABOR.ANO,
VENDA_SABOR.VENDA_ANO,
VENDA_NO_ANO.VENDA_TOTAL_ANO,
(VENDA_SABOR.VENDA_ANO / VENDA_NO_ANO.VENDA_TOTAL_ANO) * 100 AS PERCENTUAL
FROM
(
	SELECT
	TP.SABOR,
	YEAR(NF.DATA_VENDA) AS ANO,
	SUM(INF.QUANTIDADE) AS VENDA_ANO
	FROM TABELA_DE_PRODUTOS TP
	INNER JOIN ITENS_NOTAS_FISCAIS INF
	ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
	INNER JOIN NOTAS_FISCAIS NF
	ON NF.NUMERO = INF.NUMERO
	WHERE YEAR(NF.DATA_VENDA) = 2015
	GROUP BY TP.SABOR, YEAR(NF.DATA_VENDA)	
) AS VENDA_SABOR
INNER JOIN
(
	SELECT 
	YEAR(NF.DATA_VENDA) AS ANO,
	SUM(INF.QUANTIDADE) AS VENDA_TOTAL_ANO
	FROM NOTAS_FISCAIS NF
	INNER JOIN ITENS_NOTAS_FISCAIS INF
	ON INF.NUMERO = NF.NUMERO
	WHERE YEAR(NF.DATA_VENDA) = 2015
	GROUP BY YEAR(NF.DATA_VENDA)
) AS VENDA_NO_ANO
ON VENDA_SABOR.ANO = VENDA_NO_ANO.ANO
ORDER BY VENDA_SABOR.VENDA_ANO DESC


SELECT
VENDA_SABOR.SABOR,
VENDA_SABOR.ANO,
VENDA_SABOR.VENDA_ANO,
VENDA_NO_ANO.VENDA_TOTAL_ANO,
(CONVERT(FLOAT, VENDA_SABOR.VENDA_ANO) / CONVERT(FLOAT, VENDA_NO_ANO.VENDA_TOTAL_ANO)) * 100 AS PERCENTUAL
FROM
(
	SELECT
	TP.SABOR,
	YEAR(NF.DATA_VENDA) AS ANO,
	SUM(INF.QUANTIDADE) AS VENDA_ANO
	FROM TABELA_DE_PRODUTOS TP
	INNER JOIN ITENS_NOTAS_FISCAIS INF
	ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
	INNER JOIN NOTAS_FISCAIS NF
	ON NF.NUMERO = INF.NUMERO
	WHERE YEAR(NF.DATA_VENDA) = 2015
	GROUP BY TP.SABOR, YEAR(NF.DATA_VENDA)	
) AS VENDA_SABOR
INNER JOIN
(
	SELECT 
	YEAR(NF.DATA_VENDA) AS ANO,
	SUM(INF.QUANTIDADE) AS VENDA_TOTAL_ANO
	FROM NOTAS_FISCAIS NF
	INNER JOIN ITENS_NOTAS_FISCAIS INF
	ON INF.NUMERO = NF.NUMERO
	WHERE YEAR(NF.DATA_VENDA) = 2015
	GROUP BY YEAR(NF.DATA_VENDA)
) AS VENDA_NO_ANO
ON VENDA_SABOR.ANO = VENDA_NO_ANO.ANO
ORDER BY VENDA_SABOR.VENDA_ANO DESC


SELECT
VENDA_SABOR.SABOR,
VENDA_SABOR.ANO,
VENDA_SABOR.VENDA_ANO,
ROUND((CONVERT(FLOAT, VENDA_SABOR.VENDA_ANO) / CONVERT(FLOAT, VENDA_NO_ANO.VENDA_TOTAL_ANO)) * 100,2) AS PERCENTUAL
FROM
(
	SELECT
	TP.SABOR,
	YEAR(NF.DATA_VENDA) AS ANO,
	SUM(INF.QUANTIDADE) AS VENDA_ANO
	FROM TABELA_DE_PRODUTOS TP
	INNER JOIN ITENS_NOTAS_FISCAIS INF
	ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
	INNER JOIN NOTAS_FISCAIS NF
	ON NF.NUMERO = INF.NUMERO
	WHERE YEAR(NF.DATA_VENDA) = 2015
	GROUP BY TP.SABOR, YEAR(NF.DATA_VENDA)	
) AS VENDA_SABOR
INNER JOIN
(
	SELECT 
	YEAR(NF.DATA_VENDA) AS ANO,
	SUM(INF.QUANTIDADE) AS VENDA_TOTAL_ANO
	FROM NOTAS_FISCAIS NF
	INNER JOIN ITENS_NOTAS_FISCAIS INF
	ON INF.NUMERO = NF.NUMERO
	WHERE YEAR(NF.DATA_VENDA) = 2015
	GROUP BY YEAR(NF.DATA_VENDA)
) AS VENDA_NO_ANO
ON VENDA_SABOR.ANO = VENDA_NO_ANO.ANO
ORDER BY VENDA_SABOR.VENDA_ANO DESC


SELECT
VT.TAMANHO,
VT.ANO,
VT.VENDA_ANO,
ROUND((CONVERT(FLOAT, VT.VENDA_ANO) / CONVERT(FLOAT, VA.VENDA_TOTAL_ANO)) * 100,2) AS PERCENTUAL
FROM
(
	SELECT
	TP.TAMANHO,
	YEAR(NF.DATA_VENDA) AS ANO,
	SUM(INF.QUANTIDADE) AS VENDA_ANO
	FROM TABELA_DE_PRODUTOS TP
	INNER JOIN ITENS_NOTAS_FISCAIS INF
	ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
	INNER JOIN NOTAS_FISCAIS NF
	ON NF.NUMERO = INF.NUMERO
	WHERE YEAR(NF.DATA_VENDA) = 2015
	GROUP BY TP.TAMANHO, YEAR(NF.DATA_VENDA)	
) AS VT
INNER JOIN
(
	SELECT 
	YEAR(NF.DATA_VENDA) AS ANO,
	SUM(INF.QUANTIDADE) AS VENDA_TOTAL_ANO
	FROM NOTAS_FISCAIS NF
	INNER JOIN ITENS_NOTAS_FISCAIS INF
	ON INF.NUMERO = NF.NUMERO
	WHERE YEAR(NF.DATA_VENDA) = 2015
	GROUP BY YEAR(NF.DATA_VENDA)
) AS VA
ON VT.ANO = VA.ANO
ORDER BY VT.VENDA_ANO DESC

